{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errors","handleChange","e","target","value","name","setState","validate","push","test","handleOnBluer","hasErrors","valid","Object","values","some","arr","length","every","handleSubmit","addMovie","props","preventDefault","this","onSubmit","keys","item","type","placeholder","classNames","invalid","onChange","onBlur","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b07e27df.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    errors: {\n      title: [],\n      description: [],\n      imgUrl: [],\n      imdbUrl: [],\n      imdbId: [],\n    },\n  };\n\n  handleChange = (e) => {\n    const { value, name } = e.target;\n\n    this.setState(state => ({\n      movie: {\n        ...state.movie,\n        [name]: value,\n      },\n    }));\n  }\n\n  validate = (name, value) => {\n    // eslint-disable-next-line max-len\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const errors = {\n      title: [],\n      description: [],\n      imgUrl: [],\n      imdbUrl: [],\n      imdbId: [],\n    };\n\n    if (!value) {\n      errors[name].push(`Enter ${name} please!`);\n    }\n\n    if (!regex.test(value) && value\n      && (name === 'imdbUrl' || name === 'imgUrl')) {\n      errors[name].push(`* ${name} is not valid!`);\n    }\n\n    this.setState(state => ({\n      ...state,\n      errors,\n    }));\n  }\n\n  handleOnBluer = (e) => {\n    const { value, name } = e.target;\n\n    this.validate(name, value);\n  }\n\n  hasErrors = () => {\n    const { errors, movie } = this.state;\n    let valid;\n\n    if (Object.values(errors).some(arr => arr.length > 0)\n        || Object.values(movie).some(arr => arr !== '')) {\n      valid = true;\n    }\n\n    if (Object.values(movie).every(arr => arr !== '')) {\n      valid = false;\n    }\n\n    return valid;\n  }\n\n  handleSubmit = (e) => {\n    const { addMovie } = this.props;\n    const { movie } = this.state;\n\n    e.preventDefault();\n    if (Object.values(movie).every(arr => arr === '')) {\n      return;\n    }\n\n    addMovie(this.state.movie);\n    this.setState({\n      movie: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  }\n\n  render() {\n    const { movie, errors } = this.state;\n\n    return (\n      <form className=\"NewMovie\" onSubmit={this.handleSubmit}>\n        {Object.keys(movie).map(item => (\n          <div key={item}>\n            <input\n              type=\"text\"\n              name={item}\n              placeholder={item}\n              value={movie[item]}\n              className={classNames('input', {\n                invalid: errors[item][0],\n              })}\n              onChange={this.handleChange}\n              onBlur={this.handleOnBluer}\n            />\n            <span>{errors[item]}</span>\n          </div>\n        ))}\n        <button type=\"submit\" disabled={this.hasErrors()}>Add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}