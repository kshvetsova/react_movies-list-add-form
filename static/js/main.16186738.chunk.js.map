{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleError","descriptionError","imgUrlError","imdbUrlError","imdbIdError","errors","imgUrlValid","imdbUrlValid","handleChange","e","target","value","name","setState","validate","url","valid","push","test","handleSubmit","addMovie","props","preventDefault","this","onSubmit","type","placeholder","classNames","onChange","invalid","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16186738.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleError: false,\n    descriptionError: false,\n    imgUrlError: false,\n    imdbUrlError: false,\n    imdbIdError: false,\n    errors: {},\n    imgUrlValid: true,\n    imdbUrlValid: true,\n  };\n\n  handleChange = (e) => {\n    const { value, name } = e.target;\n\n    this.setState({\n      [name]: value,\n      [`${name}Error`]: false,\n      imgUrlValid: true,\n      imdbUrlValid: true,\n    });\n  }\n\n  validate = () => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    // eslint-disable-next-line max-len\n    const url = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const errors = {\n      title: [],\n      description: [],\n      imgUrl: [],\n      imdbUrl: [],\n      imdbId: [],\n    };\n    let valid = true;\n\n    if (!title) {\n      this.setState({ titleError: !title });\n      errors.title.push('Enter title please!');\n      valid = false;\n    }\n\n    if (!description) {\n      this.setState({ descriptionError: !description });\n      errors.description.push('Enter description please!');\n      valid = false;\n    }\n\n    if (!imgUrl) {\n      this.setState({\n        imgUrlError: !imgUrl,\n        imgUrlValid: true,\n      });\n      errors.imgUrl.push('Enter imgUrl please!');\n      valid = false;\n    }\n\n    if (!imdbUrl) {\n      this.setState({\n        imdbUrlError: !imdbUrl,\n        imdbUrlValid: true,\n      });\n      errors.imdbUrl.push('Enter imdbUrl please!');\n      valid = false;\n    }\n\n    if (!imdbId) {\n      this.setState({ imdbIdError: !imdbId });\n      errors.imdbId.push('Enter description please!');\n      valid = false;\n    }\n\n    if (!url.test(imgUrl) && imgUrl) {\n      this.setState({\n        imgUrlError: imgUrl,\n        imgUrlValid: false,\n      });\n      errors.imgUrl.push('* imgUrl is not valid!');\n      valid = false;\n    }\n\n    if (!url.test(imdbUrl) && imdbUrl) {\n      this.setState({\n        imdbUrlError: imdbUrl,\n        imdbUrlValid: false,\n      });\n      errors.imdbUrl.push('* imdbUrl is not valid!');\n      valid = false;\n    }\n\n    this.setState(state => ({\n      ...state,\n      errors,\n    }));\n\n    return valid;\n  }\n\n  handleSubmit = (e) => {\n    const { addMovie } = this.props;\n\n    e.preventDefault();\n    if (this.validate()) {\n      addMovie(this.state);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      });\n    }\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      descriptionError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n      imdbUrlValid,\n      imgUrlValid,\n      errors,\n    } = this.state;\n\n    return (\n      <form className=\"NewMovie\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Title\"\n          value={title}\n          className={classNames('input')}\n          onChange={this.handleChange}\n        />\n        {titleError && (<span>{errors.title[0]}</span>)}\n        <input\n          name=\"description\"\n          placeholder=\"Description\"\n          value={description}\n          className={classNames('input')}\n          onChange={this.handleChange}\n        />\n        {descriptionError && (<span>{errors.description[0]}</span>)}\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"imgUrl\"\n          value={imgUrl}\n          className={classNames('input', { invalid: !imgUrlValid })}\n          onChange={this.handleChange}\n        />\n        {imgUrlError && (<span>{errors.imgUrl[0]}</span>)}\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"imdbUrl\"\n          value={imdbUrl}\n          className={classNames('input', { invalid: !imdbUrlValid })}\n          onChange={this.handleChange}\n        />\n        {imdbUrlError && (<span>{errors.imdbUrl[0]}</span>)}\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"imdbId\"\n          value={imdbId}\n          className={classNames('input')}\n          onChange={this.handleChange}\n        />\n        {imdbIdError && (<span>{errors.imdbId[0]}</span>)}\n        <button type=\"submit\">Add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}